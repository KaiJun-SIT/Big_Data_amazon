version: '3'

services:
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    restart: always
    ports:
      - 9870:9870
      - 9000:9000
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
      - ./data:/data
      - ./src:/src
    environment:
      - CLUSTER_NAME=hadoop-cluster
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://namenode:9870"]
      interval: 30s
      timeout: 10s
      retries: 3

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    restart: always
    depends_on:
      - namenode
    ports:
      - 9864:9864
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
      - SERVICE_PRECONDITION=namenode:9870
    healthcheck:
      test: ["CMD", "curl", "-f", "http://datanode:9864"]
      interval: 30s
      timeout: 10s
      retries: 3

  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    container_name: resourcemanager
    restart: always
    depends_on:
      - namenode
      - datanode
    ports:
      - 8088:8088
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
      - YARN_CONF_yarn_resourcemanager_hostname=resourcemanager
      - SERVICE_PRECONDITION=namenode:9000 datanode:9864
    healthcheck:
      test: ["CMD", "curl", "-f", "http://resourcemanager:8088"]
      interval: 30s
      timeout: 10s
      retries: 3

  nodemanager:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager
    restart: always
    depends_on:
      - namenode
      - datanode
      - resourcemanager
    ports:
      - 8042:8042
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
      - YARN_CONF_yarn_resourcemanager_hostname=resourcemanager
      - SERVICE_PRECONDITION=resourcemanager:8088
    healthcheck:
      test: ["CMD", "curl", "-f", "http://nodemanager:8042"]
      interval: 30s
      timeout: 10s
      retries: 3

  historyserver:
    image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
    container_name: historyserver
    restart: always
    depends_on:
      - namenode
      - datanode
      - resourcemanager
    ports:
      - 8188:8188
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
      - YARN_CONF_yarn_resourcemanager_hostname=resourcemanager
      - MAPRED_CONF_mapreduce_jobhistory_address=historyserver:10020
      - SERVICE_PRECONDITION=resourcemanager:8088

  spark-master:
    image: bde2020/spark-master:3.1.1-hadoop3.2
    container_name: spark-master
    ports:
      - 8080:8080
      - 7077:7077
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
      - SPARK_PUBLIC_DNS=localhost
    volumes:
      - ./data:/data
      - ./src:/src

  spark-worker:
    image: bde2020/spark-worker:3.1.1-hadoop3.2
    container_name: spark-worker
    depends_on:
      - spark-master
    ports:
      - 8081:8081
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_WORKER_CORES=2
      - SPARK_WORKER_MEMORY=2G
      - SPARK_DRIVER_MEMORY=1G
      - SPARK_EXECUTOR_MEMORY=1G
      - SPARK_PUBLIC_DNS=localhost
    volumes:
      - ./data:/data
      - ./src:/src

  jupyter:
    image: jupyter/pyspark-notebook:latest
    container_name: jupyter
    ports:
      - 8888:8888
    environment:
      - JUPYTER_ENABLE_LAB=yes
    volumes:
      - ./notebooks:/home/jovyan/work
      - ./data:/home/jovyan/data
      - ./src:/home/jovyan/src
      - ./results:/home/jovyan/results
    command: start.sh jupyter lab --LabApp.token='' --LabApp.password=''

volumes:
  hadoop_namenode:
  hadoop_datanode: